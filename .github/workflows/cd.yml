# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CD

on:
  push:
    branches: [ "prod" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: make main properties
      run: |
        cd ./src/main
        mkdir resources
        cd ./resources
        touch ./application.properties
        echo "${{ secrets.PROPERTIES_PROD }}" > ./application.properties
      shell: bash
      
            
    - name: make test properties
      run: |
        cd ./src/test
        mkdir resources
        cd ./resources
        touch ./application.properties
        echo "${{ secrets.PROPERTIES_test }}" > ./application.properties
      shell: bash
        
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build

    - name: Docker build and push
      run: |
        docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
        docker build -t ${{ secrets.USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${GITHUB_SHA::7} .
        docker push ${{ secrets.USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${GITHUB_SHA::7}
        
          
    - name: SSH Remote Commands
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ubuntu
        key: ${{ secrets.SERVER_KEY }}
        envs: GITHUB_SHA
        script: |
          docker pull ${{ secrets.USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${GITHUB_SHA::7}
          docker tag ${{ secrets.USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${GITHUB_SHA::7} ${{ secrets.DOCKER_REPOSITORY }}
          docker stop ${{ secrets.DOCKER_REPOSITORY }}
          docker run -d --rm --name server -p 8080:8080 ${{ secrets.DOCKER_REPOSITORY }}
        
